version: '3.8'

networks:
  laravel-vue:

volumes:
  mysql_data:

services:
  app:
    build:
      context: ./dockerfiles
      dockerfile: nginx.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    ports:
      - "8001:80"
    volumes:
      - ./backend:/var/www/html:delegated
    depends_on:
      - php
      - mysql
    networks:
      - laravel-vue

  mysql:
    image: mysql:latest
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: Trainee_laravel_vue
      MYSQL_USER: laravel
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_HOST: '%'
    ports:
      - "3310:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - laravel-vue
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 10s
      retries: 5

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    restart: always
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: root
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - "8002:80"
    networks:
      - laravel-vue

  php:
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    volumes:
      - ./backend:/var/www/html:delegated
    networks:
      - laravel-vue
    depends_on:
      mysql:
        condition: service_healthy

  composer:
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    volumes:
      - ./backend:/var/www/html
    depends_on:
      - php
    entrypoint: ['composer']
    networks:
      - laravel-vue

  artisan:
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    volumes:
      - ./backend:/var/www/html:delegated
    depends_on:
      mysql:
        condition: service_healthy
    entrypoint: ['php', '/var/www/html/artisan']
    networks:
      - laravel-vue

  vue-ui:
    build:
      context: ./frontend
    ports:
      - "8085:5173"
    volumes:
      - './frontend:/app'
      - '/app/node_modules'
    networks:
      - laravel-vue
    working_dir: /app
    command: ["npm", "run", "dev"]
    environment:
      - CHOKIDAR_USEPOLLING=true